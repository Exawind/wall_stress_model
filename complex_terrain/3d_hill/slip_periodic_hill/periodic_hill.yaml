# -*- mode: yaml -*-
#
# Nalu Preprocessing utility
#
# Generate a temperature profile with capping inversion for use with ablNeutralEdge case
# delta = {delta = 0.36} m 
# ustar = {ustar = 0.212} m/s
# Uinf = {Uinf = 5.8} m/s
# nu = {nu = 1.4914285714285715e-05} m^2/s
#
# dimensionless below
# h = {h = 0.04/delta} 
# surface roughness {roughness = 1e-5/delta}
#{ nz = 64 }
#{ dz = 0.32/delta }#
#{ dx = dz/nz}
#{ ReTau = ustar*delta/nu}
#{N_BL_POINTS=10}

nalu_abl_mesh:
  output_db: mesh.exo

  spec_type: bounding_box

  fluid_part_name: fluid_part

  vertices:
  - [ {-dz},  -{dz}, 0.0]
  - [{3*dz},  {dz}, {dz}]

  mesh_dimensions: [{4*nz}, {2*nz}, {nz}]

  xmin_boundary_name: west

  xmax_boundary_name: east

  ymin_boundary_name: south

  ymax_boundary_name: north

  zmin_boundary_name: lower

  zmax_boundary_name: upper

  x_spacing:
    spacing_type: constant_spacing
  
  y_spacing:
    spacing_type: constant_spacing

  z_spacing:
    spacing_type: geometric_stretching
    stretching_factor: 1.03
    bidirectional: false 


# Mandatory section for Nalu preprocessing
nalu_preprocess:
  # Name of the input exodus database
  input_db: 3d_hill.exo
  # Name of the output exodus database
  output_db: 3d_hill_init.exo

  # Nalu preprocessor expects a list of tasks to be performed on the mesh and
  # field data structures
  tasks:
  - init_abl_fields

  init_abl_fields:

    # Fluid part is the interior mesh block(s) in the mesh. The default block is
    # `fluid` if the mesh was generated using `abl_mesh` utility.
    #
    # Use `ncdump -v eb_names <exodus_file>` to determine the mesh blocks
    #
    fluid_parts: [fluid_part]

    temperature:
      heights: [0, {dz}]
      values: [1.0]

      # Optional section to add random perturbations to temperature field
#      perturbations:
#        amplitude: 0.8 # in Kelvin
#        cutoff_height: 600.0 # Perturbations below capping inversion
#        skip_periodic_parts: [east, west, north, south]
#
# initialize with log law
    velocity:
      heights:
      {NOECHO}{_z=0}
      {NOECHO}{dh=dz/(N_BL_POINTS-1)}
      {Loop(N_BL_POINTS)}
{ECHO}      - {_z}
      {NOECHO} {_z+=dh}
      {EndLoop}
{ECHO}      values:
      {NOECHO}{_z=0}
      {NOECHO}{_u=0}
      {Loop(N_BL_POINTS)}
{ECHO}      - [{_u},0,0]
      {NOECHO}{_z+=dh}
      {NOECHO} {_u=(1.0/0.4*ln(_z*ustar/nu)+5.0)}
      {EndLoop}
{ECHO(ON)}
      perturbations:
        reference_height: .1   # Reference height for damping
        amplitude: [0, 0]    # Perturbation amplitudes in Ux and Uy
        periods: [2.0, 2.0]      # Num. periods in x and y directions

  create_bdy_io_mesh:
    output_db: boundary_data.exo
    boundary_parts: [west]   


Simulations:
- name: sim1
  time_integrator: ti_1
  optimizer: opt1

# Specify the linear system solvers.
linear_solvers:

  # solver for scalar equations
- name: solve_scalar
  type: tpetra
  method: gmres
  preconditioner: sgs
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0

  # solver for the pressure Poisson equation
- name: solve_cont
  type: tpetra
  method: gmres
  preconditioner: muelu
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0
  recompute_preconditioner: no
  muelu_xml_file_name: ./milestone.xml


# Specify the differnt physics realms.  Here, we just have one for the fluid.
realms:

  # The fluid realm that uses the 5 km x 5 km x 1 km atmospheric LES mesh.
- name: fluidRealm
  mesh: 3d_hill_init.exo
  use_edges: yes
  automatic_decomposition_type: rcb

    # This defines the equations to be solved: momentum, pressure, static enthalpy,
    # and subgrid-scale turbulent kinetic energy.  The equation system will be iterated
    # a maximum of 4 outer iterations.
  equation_systems:
    name: theEqSys
    max_iterations: 2

      # This defines which solver to use for each equation set.  See the
      # "linear_solvers" block.  All use the scalar solver, except pressure.
    solver_system_specification:
      velocity: solve_scalar
      pressure: solve_cont
      enthalpy: solve_scalar
      turbulent_ke: solve_scalar

      # This defines the equation systems, maximum number of inner iterations,
      # and scaled nonlinear residual tolerance.
    systems:

    - LowMachEOM:
        name: myLowMach
        max_iterations: 1
        convergence_tolerance: 1.0e-5
    
    - Enthalpy:
        name: myEnth
        max_iterations: 0
        convergence_tolerance: 1.0e-5

    - TurbKineticEnergy:
        name: myTke
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    # Specify the properties of the fluid, in this case air.
  material_properties:

    target_name: [fluid_part]

    constant_specification:
      universal_gas_constant: 8314.4621
      reference_pressure: 101325.0

    reference_quantities:
    - species_name: Air
      mw: 29.0
      mass_fraction: 1.0

    specifications:

        # Density here was computed such that P_ref = rho_ref*(R/mw)*300K
    - name: density
      type: constant
      value: 1.0

    - name: viscosity
      type: constant
      value: {1.0/ReTau}

    - name: specific_heat
      type: constant
      value: 1000.0

    # The initial conditions are that pressure is uniformly 0 Pa and velocity
    # is 8 m/s from 245 degrees (southwest).  Initial temperature is not
    # specified here because later it is specified as read in from file.
    # Also, perturbations are applied near the surface to initiate turbulence.
  initial_conditions:
  - constant: ic_1
    target_name: [fluid_part]
        # These are dummy variables to be overwritten by nalu_wind_utils
    value:
      pressure: 0.0
      velocity: [1.0,0.0, 0.0]

  boundary_conditions:

  - periodic_boundary_condition: bc_north_south
    target_name: [north, south]
    periodic_user_data:
      search_tolerance: 0.0001

  - periodic_boundary_condition: bc_east_west
    target_name: [east, west]
    periodic_user_data:
      search_tolerance: 0.0001

  - abltop_boundary_condition: bc_upper
    target_name: upper
    abltop_user_data:
      potential_flow_bc: false
      normal_temperature_gradient: 0.0

  - wall_boundary_condition: bc_lower
    target_name: lower
    wall_user_data:
      velocity: [0.0,0.0,0.0]
      no_slip: false
      abl_wall_function:
        surface_heating_table:
          - [     0.0, 0.00, 1.0, 1.0]
          - [999999.9, 0.00, 1.0, 1.0]
        reference_temperature: 1.0
        roughness_height: {roughness}
        kappa: 0.4
        beta_m: 5.0
        beta_h: 5.0
        gamma_m: 16.0
        gamma_h: 16.0
        gravity_vector_component: 3
        monin_obukhov_averaging_type: none
        fluctuation_model: none
        fluctuating_temperature_ref: surface

  solution_options:
    name: myOptions
    turbulence_model: ksgs
    interp_rhou_together_for_mdot: yes

      # Pressure is not fixed anywhere on the boundaries, so set it at
      # the node closest to the specified location.
    fix_pressure_at_node:
      value: 0.0
      node_lookup_type: spatial_location
      location: [0.0, 0.13, .01]
      search_target_part: [fluid_part]
      search_method: stk_kdtree

    options:

        # Model constants for the 1-eq k SGS model.
    - turbulence_model_constants:
        kappa: 0.4
        cEps: 0.93
        cmuEps: 0.0673

    - laminar_prandtl:
        enthalpy: 0.7

        # Turbulent Prandtl number is 1/3 following Moeng (1984).
    - turbulent_prandtl:
        enthalpy: 0.3333

        # SGS viscosity is divided by Schmidt number in the k SGS diffusion
        # term.  In Moeng (1984), SGS viscosity is multiplied by 2, hence
        # we divide by 1/2
    - turbulent_schmidt:
        turbulent_ke: 0.5

        # The momentum source terms are a Boussinesq bouyancy term,
        # Coriolis from Earth's rotation, and a source term to drive
        # the planar-averaged wind at a certain height to a certain
        # speed.
    - source_terms:
        momentum: 
          - body_force
    - source_term_parameters:
        momentum: [1.0,0.0,0.0]

    - user_constants:
        reference_density: 1.
        reference_temperature: 1.0
        gravity: [0.0, 0.0, 0.0]
        thermal_expansion_coefficient: 3.33333333e-3
        east_vector: [1.0, 0.0, 0.0]
        north_vector: [0.0, 1.0, 0.0]
        latitude: 41.3
        earth_angular_velocity: 7.2921159e-5

    - limiter:
        pressure: no
        velocity: no
        enthalpy: yes

    - peclet_function_form:
        velocity: tanh
        enthalpy: tanh
        turbulent_ke: tanh

    - peclet_function_tanh_transition:
        velocity: 5000000.0
        enthalpy: 2.0
        turbulent_ke: 2.0

    - peclet_function_tanh_width:
        velocity: 200.0
        enthalpy: 1.0
        turbulent_ke: 1.0

    - input_variables_from_file:
        velocity: velocity
        temperature: temperature

  output:
    output_data_base_name: output/3d_hill.exo
    output_frequency: 100
    output_node_set: no
    output_variables:
    - velocity
    - pressure
    - enthalpy
    - temperature
    - turbulent_ke
  
  boundary_layer_statistics:
    target_name: [fluid_part]
    stats_output_file: abl_statistics.nc
    compute_temperature_statistics: yes
    output_frequency: 10
    time_hist_output_frequency: 1

  
  restart:
    restart_data_base_name: rst/3dhill.rst
    restart_frequency: 1000

Time_Integrators:
- StandardTimeIntegrator:
    name: ti_1
    start_time: 0.0
    termination_step_count: 20000
    time_step: {0.5*dx/(Uinf/ustar)}
    time_stepping_type: fixed
    time_step_count: 0
    second_order_accuracy: yes

    realms:
    - fluidRealm
